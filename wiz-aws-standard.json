{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "DataScanningEnabled": {
      "Fn::Equals": [
        {
          "Ref": "DataScanning"
        },
        "Enabled"
      ]
    },
    "RoleParamIsProvided": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "RoleARN"
            },
            ""
          ]
        }
      ]
    },
    "Standard": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition"
        },
        "aws"
      ]
    }
  },
  "Description": "Wiz AWS standard deployment",
  "Outputs": {
    "ExternalID": {
      "Description": "Your External ID",
      "Value": {
        "Ref": "ExternalId"
      }
    },
    "RoleARNID": {
      "Description": "Your Role ARN ID",
      "Value": {
        "Fn::GetAtt": [
          "Role",
          "Arn"
        ]
      }
    }
  },
  "Parameters": {
    "DataScanning": {
      "AllowedValues": [
        "Enabled",
        "Disabled"
      ],
      "Default": "Disabled",
      "Description": "Enable data scanning",
      "Type": "String"
    },
    "ExternalId": {
      "AllowedPattern": "\\S{8}-\\S{4}-\\S{4}-\\S{4}-\\S{12}",
      "Description": "Enter External ID, this is a nonce that will be used by our service to assume the role",
      "Type": "String"
    },
    "RoleARN": {
      "Default": "",
      "Description": "Enter Role ARN, leave empty for default",
      "Type": "String"
    },
    "WizRoleName": {
      "Default": "WizAccess-Role",
      "Description": "Enter the role name that will be installed on your account, the default is WizAccess-Role",
      "Type": "String"
    }
  },
  "Resources": {
    "Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": {
                    "Ref": "ExternalId"
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::If": [
                    "RoleParamIsProvided",
                    {
                      "Ref": "RoleARN"
                    },
                    {
                      "Fn::If": [
                        "Standard",
                        "arn:aws:iam::197171649850:root",
                        "arn:aws-us-gov:iam::399027795803:root"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/job-function/ViewOnlyAccess"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
          }
        ],
        "RoleName": {
          "Ref": "WizRoleName"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "WizDataScanningPolicy": {
      "Condition": "DataScanningEnabled",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "redshift:DeleteClusterSnapshot",
                "redshift:AuthorizeSnapshotAccess",
                "redshift:RevokeSnapshotAccess"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "redshift:CreateTags"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:redshift:*:*:snapshot:*/*"
              }
            },
            {
              "Action": [
                "redshift:DescribeClusterSnapshots",
                "redshift:DescribeClusters"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "redshift:CreateClusterSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "rds:DescribeDBClusters",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBInstances",
                "rds:DescribeDBSnapshots",
                "rds:DescribeDBSubnetGroups",
                "rds:ListTagsForResource",
                "rds:AddTagsToResource"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "rds:DeleteDBClusterSnapshot",
                "rds:ModifyDBClusterSnapshotAttribute"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:rds:*:*:cluster-snapshot:wiz-autogen-*"
              }
            },
            {
              "Action": [
                "rds:CopyDBClusterSnapshot",
                "rds:CopyDBSnapshot"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "rds:DeleteDBSnapshot",
                "rds:ModifyDBSnapshotAttribute"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:rds:*:*:snapshot:wiz-autogen-*"
              }
            },
            {
              "Action": [
                "rds:CreateDBClusterSnapshot",
                "rds:CreateDBSnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "rds:req-tag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ReEncrypt*"
              ],
              "Condition": {
                "StringLike": {
                  "kms:ViaService": "rds.*.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:Scan",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WizDataScanningPolicy",
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "WizFullPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:GetCertificate",
                "apigateway:GET",
                "backup:DescribeGlobalSettings",
                "backup:GetBackupVaultAccessPolicy",
                "backup:GetBackupVaultNotifications",
                "backup:ListBackupVaults",
                "backup:ListTags",
                "cloudtrail:GetInsightSelectors",
                "cloudtrail:ListTrails",
                "codebuild:BatchGetProjects",
                "codebuild:GetResourcePolicy",
                "codebuild:ListProjects",
                "cognito-identity:DescribeIdentityPool",
                "connect:ListInstances",
                "connect:ListInstanceAttributes",
                "connect:ListInstanceStorageConfigs",
                "connect:ListSecurityKeys",
                "connect:ListLexBots",
                "connect:ListLambdaFunctions",
                "connect:ListApprovedOrigins",
                "connect:ListIntegrationAssociations",
                "dynamodb:DescribeExport",
                "dynamodb:DescribeKinesisStreamingDestination",
                "dynamodb:ListExports",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:SearchTransitGatewayRoutes",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRegistryPolicy",
                "ecr-public:ListTagsForResource",
                "eks:ListTagsForResource",
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticmapreduce:GetAutoTerminationPolicy",
                "elasticmapreduce:GetManagedScalingPolicy",
                "glacier:GetDataRetrievalPolicy",
                "glacier:GetVaultLock",
                "glue:GetConnection",
                "glue:GetSecurityConfiguration",
                "glue:GetTags",
                "health:DescribeAffectedAccountsForOrganization",
                "health:DescribeAffectedEntities",
                "health:DescribeAffectedEntitiesForOrganization",
                "health:DescribeEntityAggregates",
                "health:DescribeEventAggregates",
                "health:DescribeEventDetails",
                "health:DescribeEventDetailsForOrganization",
                "health:DescribeEventTypes",
                "health:DescribeEvents",
                "health:DescribeEventsForOrganization",
                "health:DescribeHealthServiceStatusForOrganization",
                "kafka:ListClusters",
                "kendra:DescribeDataSource",
                "kendra:DescribeIndex",
                "kendra:ListDataSources",
                "kendra:ListIndices",
                "kendra:ListTagsForResource",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:ListTagsForResource",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForStream",
                "kinesisvideo:GetDataEndpoint",
                "kms:GetKeyRotationStatus",
                "kms:ListResourceTags",
                "lambda:GetFunction",
                "lambda:GetLayerVersion",
                "logs:ListTagsForResource",
                "profile:GetDomain",
                "profile:ListDomains",
                "profile:ListIntegrations",
                "s3:GetBucketNotification",
                "s3:GetMultiRegionAccessPointPolicy",
                "s3:ListMultiRegionAccessPoints",
                "ses:DescribeActiveReceiptRuleSet",
                "ses:GetAccount",
                "ses:GetConfigurationSet",
                "ses:GetConfigurationSetEventDestinations",
                "ses:GetDedicatedIps",
                "ses:GetEmailIdentity",
                "ses:ListConfigurationSets",
                "ses:ListDedicatedIpPools",
                "ses:ListReceiptFilters",
                "voiceid:DescribeDomain",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetWebACLForResource",
                "wisdom:GetAssistant",
                "macie2:ListFindings",
                "macie2:GetFindings",
                "identitystore:List*",
                "identitystore:Describe*",
                "sso-directory:Describe*",
                "sso-directory:ListMembersInGroup"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:BatchGetImage",
                "ecr:DescribeImages",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:ListTagsForResource",
                "ecr:GetRegistryPolicy",
                "ecr-public:DescribeImages",
                "ecr-public:ListTagsForResource",
                "ecr-public:GetAuthorizationToken"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:CopySnapshot",
                "ec2:CreateSnapshot",
                "kms:CreateKey",
                "kms:DescribeKey",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:DescribeSnapshots"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:CreateTags"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:${AWS::Partition}:ec2:*::snapshot/*"
              }
            },
            {
              "Action": "kms:CreateAlias",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:${AWS::Partition}:kms:*:*:alias/wizKey"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:kms:*:*:key/*"
                }
              ]
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ReEncryptFrom"
              ],
              "Condition": {
                "StringLike": {
                  "kms:ViaService": "ec2.*.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:GetKeyPolicy",
                "kms:PutKeyPolicy"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:ResourceTag/wiz": "auto-gen-cmk"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:DeleteSnapshot",
                "ec2:ModifySnapshotAttribute"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/wiz": "auto-gen-snapshot"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetBucketLocation",
                "s3:GetObjectTagging",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*terraform*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*tfstate*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*tf?state*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::*cloudtrail*"
                },
                {
                  "Fn::Sub": "arn:${AWS::Partition}:s3:::elasticbeanstalk-*"
                }
              ],
              "Sid": "WizAccessS3"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "WizFullPolicy",
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  }
}
